{"version":3,"file":"Portal.js","sourceRoot":"","sources":["../../src/modal/Portal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createContext, use, useCallback, useState, type PropsWithChildren } from 'react';\nimport { StyleSheet, type ViewProps } from 'react-native';\n\nimport {\n  NativeModalPortalContent,\n  NativeModalPortalContentWrapper,\n  NativeModalPortalHost,\n} from './native';\n\ninterface PortalContextType {\n  hasHostId: (hostId: string) => boolean;\n  addHostId: (hostId: string) => void;\n  removeHostId: (hostId: string) => void;\n}\n\nexport const PortalContext = createContext<PortalContextType>({\n  hasHostId: () => false,\n  addHostId: () => {},\n  removeHostId: () => {},\n});\n\nexport const PortalContextProvider = (props: PropsWithChildren) => {\n  const [nativeIds, setNativeIds] = useState<Set<string>>(() => new Set());\n\n  const hasHostId = useCallback(\n    (hostId: string) => {\n      return nativeIds.has(hostId);\n    },\n    [nativeIds]\n  );\n\n  const addHostId = useCallback((hostId: string) => {\n    setNativeIds((prev) => new Set(prev).add(hostId));\n  }, []);\n\n  const removeHostId = useCallback((hostId: string) => {\n    setNativeIds((prev) => {\n      const updated = new Set(prev);\n      updated.delete(hostId);\n      return updated;\n    });\n  }, []);\n\n  return (\n    <PortalContext.Provider value={{ hasHostId, addHostId, removeHostId }}>\n      {props.children}\n    </PortalContext.Provider>\n  );\n};\n\nexport interface ModalPortalHostProps {\n  hostId: string;\n  // When set to true, the portal host will take up the full available space.\n  fluid?: boolean;\n  style?: ViewProps['style'];\n}\n\nexport const ModalPortalHost = (props: ModalPortalHostProps) => {\n  const { addHostId, removeHostId } = use(PortalContext);\n\n  const style = StyleSheet.flatten([props.style, props.fluid ? { flex: 1 } : undefined]);\n  return (\n    <NativeModalPortalHost\n      style={style}\n      fluid={props.fluid}\n      hostId={props.hostId}\n      onRegistered={({ nativeEvent }) => {\n        addHostId(nativeEvent.hostId);\n      }}\n      onUnregistered={({ nativeEvent }) => {\n        removeHostId(nativeEvent.hostId);\n      }}\n    />\n  );\n};\n\nexport interface ModalPortalContentProps {\n  hostId: string;\n  children: React.ReactNode;\n}\n\nexport const ModalPortalContent = (props: ModalPortalContentProps) => {\n  const { hasHostId } = use(PortalContext);\n  const isHostFound = hasHostId(props.hostId);\n  // At first render, the hostId might not be registered yet\n  if (!isHostFound) {\n    // Returning null here to avoid rendering the content before the\n    return null;\n  }\n  return (\n    <NativeModalPortalContentWrapper hostId={props.hostId}>\n      {isHostFound ? (\n        <NativeModalPortalContent style={styles.portalContent}>\n          {props.children}\n        </NativeModalPortalContent>\n      ) : null}\n    </NativeModalPortalContentWrapper>\n  );\n};\n\nconst styles = StyleSheet.create({\n  portalContent: {\n    position: 'absolute',\n  },\n});\n"]}